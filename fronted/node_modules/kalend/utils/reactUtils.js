"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseEventString = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const interface_1 = require("../common/interface");
const eva_icons_1 = require("../components/eva-icons");
const common_1 = require("./common");
const parseEventString = (value, className, style, type, isDark, isTaskChecked) => {
    let newValueString = value;
    if (newValueString.indexOf('\\n') !== -1) {
        newValueString = newValueString.replace(/\\n/g, ' ');
    }
    if (newValueString.indexOf('\\;') !== -1) {
        newValueString = newValueString.replace(/\\;/g, ';');
    }
    if (newValueString.indexOf('\\,') !== -1) {
        newValueString = newValueString.replace(/\\,/g, ',');
    }
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ style: {
            display: 'flex',
            alignItems: 'center',
            flexDirection: 'row',
            maxHeight: '100%',
            overflow: 'hidden',
        } }, { children: [type === interface_1.CALENDAR_EVENT_TYPE.TASK ? (!isTaskChecked ? ((0, jsx_runtime_1.jsx)(eva_icons_1.EvaIcons.RadioOff, { className: (0, common_1.parseCssDark)('Kalend__icon-task', isDark) })) : ((0, jsx_runtime_1.jsx)(eva_icons_1.EvaIcons.RadioOn, { className: (0, common_1.parseCssDark)('Kalend__icon-task', isDark) }))) : null, (0, jsx_runtime_1.jsx)("p", Object.assign({ className: className, style: style }, { children: newValueString }))] })));
};
exports.parseEventString = parseEventString;
